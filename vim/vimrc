" ┌──────────────────────────────────────────────────────────────────────────────┐
" │  ╔════╗  DO NOT EDIT THIS FILE                                               │
" │──╢ 🔒 ╟──────────────────────────────────────────────────────────────────────┤
" │  ╚════╝  Instead, override settings in `~/.vimrc_personal`                   │
" ╞══════════════════════════════════════════════════════════════════════════════╡
" │  Docs: https://git.io/fhx1B                                 License: BSD 3-C │
" └──────────────────────────────────────────────────────────────────────────────┘

" Skip the Vim Defaults.
let g:skip_defaults_vim = 1

" Use Vim settings, rather then Vi settings.
set nocompatible

" -- GENERAL CONFIGURATION -------------------------------------------------------

set title                       "change the terminal's title
set nonumber                    "Line numbers.
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set gcr=a:blinkon0              "Disable cursor blink
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim
set clipboard=                  "empty
set laststatus=2                "Show the statusbar.
set lazyredraw                  "Performance.
set hlsearch                    "Hightlight Search
set encoding=utf-8              "We like utf8
set synmaxcol=1000              "Reduce synmaxcol for performance.
set number                      "Absolute numbers

" Mouse
silent! set ttymouse=xterm2
set mouse=a


" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
set hidden

"turn on syntax highlighting
syntax on

if !has('gui_running')
  set t_Co=256
endif

" -- TURN OFF SWAP FILES ---------------------------------------------------------

set noswapfile
set nobackup
set nowb

" -- PERSISTENT UNDO -------------------------------------------------------------
" Keep undo history across sessions, by storing in file.
" Only works all the time.

" Put plugins and dictionaries in this dir (also on Windows)
let vimDir = '$HOME/.vim'
let &runtimepath.=','.vimDir

" Keep undo history across sessions by storing it in a file
if has('persistent_undo')
  let myUndoDir = expand(vimDir . '/undodir')
  " Create dirs
  call system('mkdir ' . vimDir)
  call system('mkdir ' . myUndoDir)
  let &undodir = myUndoDir
  set undofile
endif

" -- INDENTATION -----------------------------------------------------------------

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:`
set nowrap       "Don't wrap lines
set linebreak    "Wrap lines at convenient points

" -- FOLDING ---------------------------------------------------------------------

set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" -- COMPLETION ------------------------------------------------------------------

set wildmode=list:longest
set wildmenu                                                                                  "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore+=*.o,*.out,*.obj,.git,*.rbc,*.rbo,*.class,.svn,*.gem                           "Disable output and VCS files
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz,*.dmg                                 "Disable archive files
set wildignore+=*.pdf,*.ai,*.psd,*.doc,*.gdoc,*.jpeg,*.jpg,*.jpeg,*.png,*.gif                 "Disable archive files
set wildignore+=*/vendor/gems/*,*/vendor/cache/*,*/vendor/rails/*,*/.bundle/*,*/.sass-cache/* "Ignore bundler and sass cache
set wildignore+=*.swp,*~,._*,*/.AppleDouble*,*.DS_STORE,log/**,tmp/**,*vim/backups*           "Disable temp and backup files

" -- SCROLLING -------------------------------------------------------------------

set scrolloff=8         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1


set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set wildmenu		" display completion matches in a status line

set timeout		" time out for key codes
set timeoutlen=500	" wait up to 100ms after Esc for special key

" Show @@@ in the last line if it is truncated.
set display=truncate

" -- AUTO COMMANDS ---------------------------------------------------------------
" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  " Revert with ":filetype off".
  filetype plugin indent on

  " Put these in an autocmd group, so that you can revert them with:
  " ":augroup vimStartup | au! | augroup END"
  augroup vimStartup
    au!

    " When editing a file, always jump to the last known cursor position.
    " Don't do it when the position is invalid or when inside an event handler
    " (happens when dropping a file on gvim).
    autocmd BufReadPost *
      \ if line("'\"") >= 1 && line("'\"") <= line("$") |
      \   exe "normal! g`\"" |
      \ endif

  augroup END

endif " has("autocmd")


" Load the Plugins.
source ~/.vim/plug.vim

if filereadable(expand("~/.vimrc_personal"))
  source ~/.vimrc_personal
endif

